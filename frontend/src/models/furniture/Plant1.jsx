/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: dudecon (https://sketchfab.com/dudecon)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/potted-plant-mediterranean-med-leaf-low-poly-bc7f26baef2a45d18dbd9a5d6d2ec565
Title: Potted Plant, Mediterranean med leaf, low poly
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import plantScene from "../../assets/3d/furniture/plant1.glb";

const Plant1 = (props) => {
  const groupRef = useRef();
  const { nodes, materials } = useGLTF(plantScene);

  // Set overall model scale here
  const overallScale = [15, 15, 15];

  return (
    <group {...props} ref={groupRef} scale={overallScale} position={[0, 0, 0]}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.134}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_4.geometry}
            material={materials.Material_Bake}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_6.geometry}
            material={materials.Material}
            position={[-1.86, 6.403, 0.027]}
            rotation={[0, 0, -0.553]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_8.geometry}
            material={materials.Material}
            position={[0.84, 6.997, 1.874]}
            rotation={[Math.PI, 1.154, 2.589]}
            scale={1.139}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_10.geometry}
            material={materials.Material}
            position={[0.233, 8.266, -1.235]}
            rotation={[3.141, -1.338, 2.443]}
            scale={1.378}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_12.geometry}
            material={materials.Material}
            position={[-0.821, 4.675, 1.062]}
            rotation={[0, 0.897, -0.435]}
            scale={0.794}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_14.geometry}
            material={materials.Material}
            position={[1.148, 3.968, 0.524]}
            rotation={[Math.PI, 0.545, 2.707]}
            scale={0.681}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_16.geometry}
            material={materials.Material}
            position={[-0.363, 4.755, -1.062]}
            rotation={[0.078, -1.257, -0.486]}
            scale={0.625}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_18.geometry}
            material={materials.Material}
            position={[0.012, 3.577, 0.938]}
            rotation={[Math.PI, 1.536, 2.707]}
            scale={0.416}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_20.geometry}
            material={materials.Material}
            position={[-0.873, 3.579, -0.329]}
            rotation={[0, -0.355, -0.435]}
            scale={0.36}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_22.geometry}
            material={materials.Material}
            position={[0.669, 3.593, -0.47]}
            rotation={[Math.PI, -0.592, 2.707]}
            scale={0.316}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_24.geometry}
            material={materials.Material}
            position={[1.179, 5.363, -0.992]}
            rotation={[Math.PI, -0.683, 2.707]}
            scale={0.911}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_26.geometry}
            material={materials.material_0}
            position={[0, 2.393, 0]}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload(plantScene);
export default Plant1;