/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Zhuier (https://sketchfab.com/Zhuier)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/oiiaioooooiai-cat-30d27bf7fb224849b76e208a6eccdb36
Title: Oiiaioooooiai Cat
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import * as THREE from 'three' // Add this import
import memeCatScene from "../../assets/3d/furniture/memeCat.glb";

const MemeCat = (props) => {
  const groupRef = useRef();
  const { nodes, materials, animations } = useGLTF(memeCatScene);
  const { actions, mixer } = useAnimations(animations, groupRef);

  // Set overall model scale here
  const overallScale = [13, 13, 13];

  // Activate all animations when component mounts
  useEffect(() => {
    console.log('MemeCat available animations:', Object.keys(actions));
    console.log('Animation mixer:', mixer);
    
    // Play all available animations
    Object.keys(actions).forEach((actionName) => {
      const action = actions[actionName];
      if (action) {
        action.play();
        console.log(`Playing MemeCat animation: ${actionName}`);
        
        // Optional: Set animation properties
        action.setLoop(THREE.LoopRepeat, Infinity); // Loop forever
        action.clampWhenFinished = true;
      }
    });

    // Clean up animations on unmount
    return () => {
      Object.keys(actions).forEach((actionName) => {
        actions[actionName]?.stop();
      });
    };
  }, [actions, mixer]);

  return (
    <group {...props} ref={groupRef} scale={overallScale} position={[0, 0, 0]}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group
            name="191d233c94184f188ac4fad4b07dc182fbx"
            rotation={[Math.PI / 2, 0, 0]}
            scale={0.01}>
            <group name="Object_2">
              <group name="RootNode">
                <group name="Muchkin1002">
                  <mesh
                    name="0"
                    castShadow
                    receiveShadow
                    geometry={nodes['0'].geometry}
                    material={materials.Muchkin2}
                    morphTargetDictionary={nodes['0'].morphTargetDictionary}
                    morphTargetInfluences={nodes['0'].morphTargetInfluences}
                  />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload(memeCatScene);
export default MemeCat;
